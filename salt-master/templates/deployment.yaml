apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "salt-master.fullname" . }}
  labels:
    app: {{ include "salt-master.name" . }}
    chart: {{ include "salt-master.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: {{ include "salt-master.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "salt-master.name" . }}
        release: {{ .Release.Name }}
    spec:
      hostNetwork: {{ .Values.hostNetwork }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SALT_MASTER_CONFIG
              value: |
{{ .Values.saltMasterConfig | indent 16 }}
            - name: SALT_API_CONFIG
              value: |
{{ .Values.saltApiConfig | indent 16}}
            {{- if .Values.saltSharedSecret }}
            - name: SALT_SHARED_SECRET
              value: "{{ .Values.saltSharedSecret }}"
            {{- end }}
          ports:
            - name: publisher
              containerPort: 4505
              protocol: TCP
              {{- if .Values.enableSaltMasterHostPort }}
              hostPort: 4505
              {{- end }}
            - name: communication
              containerPort: 4506
              protocol: TCP
              {{- if .Values.enableSaltMasterHostPort }}
              hostPort: 4506
              {{- end }}
            - name: api
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 120
            periodSeconds: 120
            timeoutSeconds: 30
            httpGet:
              path: /
              port: 8000
          readinessProbe:
            initialDelaySeconds: 120
            periodSeconds: 120
            timeoutSeconds: 30
            httpGet:
              path: /
              port: 8000
          volumeMounts:
            - mountPath: /etc/salt/master.d # Config files
              name: data
              subPath: master.d
            - mountPath: /etc/salt/pki # Master and minion authentication keys
              name: data
              subPath: pki
            - mountPath: /var/cache/salt # Job and minion data cache
              name: data
              subPath: cache
            - mountPath: /srv/salt # Contains states, pillars etc if not using gitfs backend
              name: data
              subPath: srv
          resources:
{{ toYaml .Values.resources | indent 12 }}
        {{- if .Values.salt_sproxy.enabled }}
        - name: {{ .Values.salt_sproxy.name }}
          image: "{{ .Values.salt_sproxy.image.repository }}:{{ .Values.salt_sproxy.image.tag }}"
          imagePullPolicy: {{ .Values.salt_sproxy.image.pullPolicy }}
          volumeMounts:
            - mountPath: /srv/salt # Contains states, pillars etc if not using gitfs backend
              name: data
              subPath: srv
        {{- end }}
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "salt-master.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
